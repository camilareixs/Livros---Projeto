import React from 'react';
import { TextInput, Text, View, TouchableOpacity, StyleSheet, ScrollView, FlatList } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { createStackNavigator } from '@react-navigation/stack';
import { MaterialCommunityIcons } from '@expo/vector-icons';
import AsyncStorage from '@react-native-async-storage/async-storage';

const Tab = createBottomTabNavigator();
const Stack = createStackNavigator();

class Welcome extends React.Component {
  render() {
    return (
      <View style={styles.welcomeContainer}>
        <Text style={styles.welcomeText}>Bem-vindo ao App de Livros!</Text>
        <Text style={styles.descriptionText}>Pesquise livros e descubra novas recomendações.</Text>
      </View>
    );
  }
}

class Principal extends React.Component {
  constructor(props) {
    super(props);
    this.state = { usuario: '', senha: '' };
  }

  async ler() {
    try {
      let senha = await AsyncStorage.getItem(this.state.usuario);
      if (senha && senha === this.state.senha) {
        this.goToBusca();
      } else {
        alert(senha ? "Senha Incorreta!" : "Usuário não encontrado!");
      }
    } catch (erro) {
      console.log(erro);
    }
  }

  goToBusca() {
    this.props.navigation.replace("BuscarLivro"); // Alterado para navegar diretamente para a página de busca
  }

  render() {
    return (
      <ScrollView contentContainerStyle={styles.container}>
        <Text style={styles.label}>Usuário:</Text>
        <TextInput style={styles.input} onChangeText={(texto) => this.setState({ usuario: texto })} />
        <Text style={styles.label}>Senha:</Text>
        <TextInput style={styles.input} secureTextEntry onChangeText={(texto) => this.setState({ senha: texto })} />
        <TouchableOpacity style={styles.button} onPress={() => this.ler()}>
          <Text style={styles.buttonText}>Logar</Text>
        </TouchableOpacity>
      </ScrollView>
    );
  }
}

class Cadastro extends React.Component {
  constructor(props) {
    super(props);
    this.state = { usuario: '', senha: '' };
  }

  async gravar() {
    try {
      await AsyncStorage.setItem(this.state.usuario, this.state.senha);
      alert("Usuário cadastrado com sucesso!");
    } catch (erro) {
      alert("Erro ao cadastrar!");
    }
  }

  render() {
    return (
      <ScrollView contentContainerStyle={styles.container}>
        <Text style={styles.label}>Nome de usuário:</Text>
        <TextInput style={styles.input} onChangeText={(texto) => this.setState({ usuario: texto })} />
        <Text style={styles.label}>Senha:</Text>
        <TextInput style={styles.input} secureTextEntry onChangeText={(texto) => this.setState({ senha: texto })} />
        <TouchableOpacity style={styles.button} onPress={() => this.gravar()}>
          <Text style={styles.buttonText}>Cadastrar</Text>
        </TouchableOpacity>
      </ScrollView>
    );
  }
}

class BuscarLivro extends React.Component {
  constructor(props) {
    super(props);
    this.state = { termoPesquisa: '', resultados: [] };
  }

  async pesquisarLivro() {
    try {
      let resposta = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${this.state.termoPesquisa}`);
      let json = await resposta.json();
      this.setState({ resultados: json.items || [] });
    } catch (error) {
      console.log(error);
    }
  }

  render() {
    return (
      <View style={styles.container}>
        <TextInput
          style={styles.input}
          placeholder="Pesquisar livro"
          onChangeText={(texto) => this.setState({ termoPesquisa: texto })}
        />
        <TouchableOpacity style={styles.button} onPress={() => this.pesquisarLivro()}>
          <Text style={styles.buttonText}>Pesquisar</Text>
        </TouchableOpacity>
        <FlatList
          data={this.state.resultados}
          keyExtractor={(item) => item.id}
          renderItem={({ item }) => (
            <TouchableOpacity
              style={styles.item}
              onPress={() => this.props.navigation.navigate("DetalhesLivro", { livro: item })}
            >
              <Text style={styles.itemText}>{item.volumeInfo.title}</Text>
            </TouchableOpacity>
          )}
        />
      </View>
    );
  }
}

class DetalhesLivro extends React.Component {
  render() {
    const { livro } = this.props.route.params;
    const titulo = livro.volumeInfo.title;
    const autor = livro.volumeInfo.authors?.join(', ') || "Autor Desconhecido";
    const descricao = livro.volumeInfo.description ? livro.volumeInfo.description.split(' ').slice(0, 30).join(' ') + '...' : "Descrição não disponível.";

    const musicaAleatoria = [
      "Adele - Someone Like You",
      "Billie Eilish - When the Party's Over",
      "Lana Del Rey - Summertime Sadness",
      "The Weeknd - Blinding Lights",
      "Sia - Breathe Me",
      "Johnny Cash - Hurt",
      "Sam Smith - I'm Not the Only One",
      "The Cure - Pictures of You",
      "Kendrick Lamar - u",
      "Lana Del Rey - Born to Die",
      "Tori Amos - Winter",
      "Hozier - Cherry Wine",
      "Sufjan Stevens - John Wayne Gacy, Jr.",
      "Damien Rice - 9 Crimes",
      "Lorde - The Louvre",
      "Radiohead - No Surprises",
      "James Blake - Retrograde",
      "Florence + The Machine - Shake It Out",
      "Arcade Fire - The Suburbs",
      "Sigur Rós - Sæglópur",
      "The Smiths - How Soon Is Now?",
      "Nine Inch Nails - Hurt",
      "The National - I Need My Girl",
      "Portishead - Roads",
      "Bauhaus - Bela Lugosi's Dead",
      "Skrillex - First of the Year (Equinox)",
      "Michael Jackson - Thriller",
      "Led Zeppelin - Stairway to Heaven",
      "Pearl Jam - Alive",
      "Legião Urbana - Tempo Perdido"
    ];

    const filmeAleatorio = [
      "Uma Mente Brilhante",
      "Forrest Gump - O Contador de Histórias",
      "O Poderoso Chefão",
      "O Cavaleiro das Trevas",
      "A Origem",
      "Clube da Luta",
      "O Silêncio dos Inocentes",
      "O Prestígio",
      "Os Infiltrados",
      "À Espera de um Milagre",
      "Pulp Fiction - Tempo de Violência",
      "Se7en - Os Sete Crimes Capitais",
      "Ilha do Medo",
      "Matrix",
      "O Regresso",
      "Laranja Mecânica",
      "Os Suspeitos",
      "Garota Exemplar",
      "Beleza Americana",
      "Ela",
      "Brilho Eterno de uma Mente sem Lembranças",
      "La La Land - Cantando Estações",
      "500 Dias com Ela",
      "Titanic",
      "O Lado Bom da Vida",
      "Antes do Amanhecer",
      "A Culpa é das Estrelas",
      "O Voto",
      "A Teoria de Tudo",
      "À Procura da Felicidade"
    ];

    return (
      <View style={styles.detalhesContainer}>
        <Text style={styles.detalhesText}>Título: {titulo}</Text>
        <Text style={styles.detalhesText}>Autor: {autor}</Text>
        <Text style={styles.sinopseText}>{descricao}</Text>

        <Text style={styles.recommendationTitle}>Onde Comprar:</Text>
        <Text style={styles.recommendationText}>- Amazon</Text>
        <Text style={styles.recommendationText}>- Livraria Cultura</Text>

        <Text style={styles.recommendationTitle}>Música para Ouvir:</Text>
        <Text style={styles.recommendationText}>{musicaAleatoria[Math.floor(Math.random() * musicaAleatoria.length)]}</Text>

        <Text style={styles.recommendationTitle}>Filme Semelhante:</Text>
        <Text style={styles.recommendationText}>{filmeAleatorio[Math.floor(Math.random() * filmeAleatorio.length)]}</Text>
      </View>
    );
  }
}

const HomeTabs = () => (
  <Tab.Navigator
    screenOptions={{
      tabBarActiveTintColor: '#FFB300',
      tabBarInactiveTintColor: '#ffffff',
      tabBarStyle: { backgroundColor: '#2E004E', borderTopLeftRadius: 20, borderTopRightRadius: 20 },
    }}
  >
    <Tab.Screen
      name="Bem-vindo"
      component={Welcome}
      options={{
        tabBarIcon: ({ color, size }) => <MaterialCommunityIcons name="home" color={color} size={size} />,
      }}
    />
    <Tab.Screen
      name="Login"
      component={Principal}
      options={{
        tabBarIcon: ({ color, size }) => <MaterialCommunityIcons name="home-account" color={color} size={size} />,
      }}
    />
    <Tab.Screen
      name="Cadastro"
      component={Cadastro}
      options={{
        tabBarIcon: ({ color, size }) => <MaterialCommunityIcons name="account-details" color={color} size={size} />,
      }}
    />
  </Tab.Navigator>
);

const App = () => (
  <NavigationContainer>
    <Stack.Navigator>
      <Stack.Screen name="Home" component={HomeTabs} options={{ headerShown: false }} />
      <Stack.Screen name="DetalhesLivro" component={DetalhesLivro} options={{ headerShown: true }} />
      <Stack.Screen name="BuscarLivro" component={BuscarLivro} options={{ headerShown: true }} />
    </Stack.Navigator>
  </NavigationContainer>
);

const styles = StyleSheet.create({
  welcomeContainer: { 
    flex: 1, 
    justifyContent: 'center', 
    alignItems: 'center', 
    padding: 16, 
    backgroundColor: '#4B0082' // Roxo profundo
  },
  welcomeText: { 
    fontSize: 24, 
    fontWeight: 'bold', 
    color: '#FFB300', // Amarelo
    marginBottom: 16 
  },
  descriptionText: { 
    fontSize: 16, 
    color: '#FFD700', // Mostarda
    textAlign: 'center' 
  },
  container: { 
    flex: 1, 
    justifyContent: 'center', 
    padding: 16, 
    backgroundColor: '#4B0082' // Roxo profundo
  },
  label: { 
    marginBottom: 8, 
    fontSize: 18, 
    fontWeight: 'bold', 
    color: '#FFB300' // Amarelo
  },
  input: { 
    height: 50, 
    borderColor: '#FFB300', // Amarelo
    borderWidth: 1, 
    borderRadius: 25, 
    paddingLeft: 20, 
    marginBottom: 16, 
    backgroundColor: '#ffffff' 
  },
  button: { 
    backgroundColor: '#FFB300', // Amarelo
    borderRadius: 25, 
    paddingVertical: 15, 
    alignItems: 'center' 
  },
  buttonText: { 
    color: '#4B0082', // Roxo profundo
    fontSize: 16, 
    fontWeight: 'bold' 
  },
  item: { 
    padding: 10, 
    marginVertical: 5, 
    backgroundColor: '#FFB300', // Amarelo
    borderRadius: 10 
  },
  itemText: { 
    fontSize: 18, 
    color: '#4B0082' // Roxo profundo
  },
  detalhesContainer: { 
    flex: 1, 
    padding: 16, 
    backgroundColor: '#4B0082' // Roxo profundo
  },
  detalhesText: { 
    fontSize: 20, 
    color: '#FFB300', // Amarelo
    fontWeight: 'bold', 
    marginBottom: 8 
  },
  sinopseText: { 
    fontSize: 16, 
    color: '#FFFFFF', 
    marginBottom: 16 
  },
  recommendationTitle: { 
    fontSize: 18, 
    color: '#FFB300', // Amarelo
    fontWeight: 'bold', 
    marginBottom: 8 
  },
  recommendationText: { 
    fontSize: 16, 
    color: '#FFD700' // Mostarda
  },
});

export default App;
